// Generated by view binder compiler. Do not edit!
package kz.course.justcodehw3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kz.course.justcodehw3.R;

public final class ActivityInputBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button checkButton;

  @NonNull
  public final TextInputLayout secondsEditText;

  @NonNull
  public final TextInputEditText secondsInput;

  @NonNull
  public final Button startTimerButton;

  private ActivityInputBinding(@NonNull ConstraintLayout rootView, @NonNull Button checkButton,
      @NonNull TextInputLayout secondsEditText, @NonNull TextInputEditText secondsInput,
      @NonNull Button startTimerButton) {
    this.rootView = rootView;
    this.checkButton = checkButton;
    this.secondsEditText = secondsEditText;
    this.secondsInput = secondsInput;
    this.startTimerButton = startTimerButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkButton;
      Button checkButton = ViewBindings.findChildViewById(rootView, id);
      if (checkButton == null) {
        break missingId;
      }

      id = R.id.secondsEditText;
      TextInputLayout secondsEditText = ViewBindings.findChildViewById(rootView, id);
      if (secondsEditText == null) {
        break missingId;
      }

      id = R.id.secondsInput;
      TextInputEditText secondsInput = ViewBindings.findChildViewById(rootView, id);
      if (secondsInput == null) {
        break missingId;
      }

      id = R.id.startTimerButton;
      Button startTimerButton = ViewBindings.findChildViewById(rootView, id);
      if (startTimerButton == null) {
        break missingId;
      }

      return new ActivityInputBinding((ConstraintLayout) rootView, checkButton, secondsEditText,
          secondsInput, startTimerButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
